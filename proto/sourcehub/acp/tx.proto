syntax = "proto3";

package sourcehub.acp;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "sourcehub/acp/access_decision.proto";
import "sourcehub/acp/params.proto";
import "sourcehub/acp/policy_cmd.proto";
import "sourcenetwork/acp_core/policy_short.proto";
import "sourcenetwork/acp_core/policy.proto";

option go_package = "github.com/sourcenetwork/sourcehub/x/acp/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // CreatePolicy adds a new Policy to SourceHub.
  // The Policy models an aplication's high level access control rules.
  rpc CreatePolicy(MsgCreatePolicy) returns (MsgCreatePolicyResponse);

  // CheckAccess executes an Access Request for an User and stores the result of the evaluation in SourceHub.
  // The resulting evaluation is used to generate a cryptographic proof that the given Access Request
  // was valid at a particular block height.
  rpc CheckAccess(MsgCheckAccess) returns (MsgCheckAccessResponse);
  
  // SignedPolicyCmd is a wrapper for a Command which is executed within the Context of a Policy.
  // The Command is signed by the Actor issuing it.
  rpc SignedPolicyCmd(MsgSignedPolicyCmd) returns (MsgSignedPolicyCmdResponse);

  // BearerPolicyCmd is a Msg containing an instruction which changes the authorization
  // rules in a Policy.
  // This Msg authenticates the actor through the the Bearer authentication protocol.
  
  // The Msg authenticates the actor initiating the command through a Bearer token.
  // This token MUST be issued and signed by some DID Actor, the verification of the signature
  // is used as authentication proof.
  // Lastly, the Bearer token MUST be bound to some SourceHub account.
  rpc BearerPolicyCmd(MsgBearerPolicyCmd) returns (MsgBearerPolicyCmdResponse);

  rpc DirectPolicyCmd(MsgDirectPolicyCmd) returns (MsgDirectPolicyCmdResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "sourcehub/x/acp/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreatePolicy {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string policy = 2;
  sourcenetwork.acp_core.PolicyMarshalingType marshal_type = 3;
  google.protobuf.Timestamp creation_time = 4;
}

message MsgCreatePolicyResponse {
  sourcenetwork.acp_core.Policy policy = 1;
}

message MsgCheckAccess {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string policy_id = 2;
  google.protobuf.Timestamp creation_time = 3;
  AccessRequest access_request = 4;
}

message MsgCheckAccessResponse {
  AccessDecision decision = 1;
}

message MsgSignedPolicyCmd {
  enum ContentType {
    UNKNOWN = 0;
    JWS     = 1;
  }
  option (cosmos.msg.v1.signer) = "creator";
  string      creator = 1;
  string      payload = 2;
  ContentType type    = 3;
}

message MsgSignedPolicyCmdResponse {
  PolicyCmdResult result = 1;
}

message MsgBearerPolicyCmd {
  option (cosmos.msg.v1.signer) = "creator";
  string                    creator       = 1;
  string                    bearer_token  = 2;
  string                    policy_id     = 3;
  PolicyCmd                 cmd           = 4;
  google.protobuf.Timestamp creation_time = 5;
}

message MsgBearerPolicyCmdResponse {
  PolicyCmdResult result = 1;
}

message MsgDirectPolicyCmd {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string                    policy_id     = 2;
  PolicyCmd                 cmd           = 3;
  google.protobuf.Timestamp creation_time = 4;
}

message MsgDirectPolicyCmdResponse {
  PolicyCmdResult result = 1;
}