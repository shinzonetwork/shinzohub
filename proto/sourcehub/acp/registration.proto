syntax = "proto3";

package sourcehub.acp;

import "google/protobuf/timestamp.proto";
import "sourcenetwork/acp_core/relationship.proto";
import "sourcehub/acp/time.proto";
import "sourcehub/acp/record.proto";

option go_package = "github.com/sourcenetwork/sourcehub/x/acp/types";

// AmendmentEvent is a record which tracks executions of the Registration Amendment rule in SourceHub ACP
message AmendmentEvent {
    // event id
    uint64 id = 1;
    // id of affected policy
    string policy_id = 2;
    // object whose registration was amended
    sourcenetwork.acp_core.Object object = 3;
    // new_owner is the new object owner
    sourcenetwork.acp_core.Actor new_owner = 4;
    // previous_owner is the previous object owner
    sourcenetwork.acp_core.Actor previous_owner = 5;
    // commitment_id is the id of the commitment which generated the amendment
    uint64 commitment_id = 6;
    // hijack_flag is true if the amendment rule was executed and the new_owner chose to flag
    // the previous_owner as a potential object hijacker
    bool hijack_flag = 7;
    RecordMetadata metadata = 8;
}